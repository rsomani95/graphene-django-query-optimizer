# Generated by Django 4.2.10 on 2024-04-25 16:24

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_date', models.DateField(null=True)),
                ('street_address', models.CharField(max_length=200)),
                ('stair', models.CharField(max_length=16)),
                ('floor', models.IntegerField(null=True)),
                ('apartment_number', models.PositiveIntegerField()),
                ('shares_start', models.PositiveIntegerField(null=True)),
                ('shares_end', models.PositiveIntegerField(null=True)),
                ('surface_area', models.DecimalField(decimal_places=2, max_digits=9, null=True)),
                ('rooms', models.PositiveIntegerField(null=True)),
            ],
            options={
                'verbose_name': 'Apartment',
                'verbose_name_plural': 'Apartments',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('street_address', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='CustomTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('category', models.CharField(db_index=True, default='custom', max_length=200)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('confidence', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Developer',
                'verbose_name_plural': 'Developers',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardManyToManyForRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardManyToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardManyToOneForRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForwardOneToOneForRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HousingCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('street_address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Housing company',
                'verbose_name_plural': 'Housing companies',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('library_name', models.CharField(max_length=200)),
                ('description', models.TextField(default=None, null=True)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('identifier', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Owner',
                'verbose_name_plural': 'Owners',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('example_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.example')),
                ('forward_many_to_many_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.forwardmanytomanyforrelated')),
                ('forward_many_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_many_to_many_rels', to='example.forwardmanytooneforrelated')),
                ('forward_one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_many_to_many_rel', to='example.forwardonetooneforrelated')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('example_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.example')),
                ('forward_many_to_many_fields', models.ManyToManyField(related_name='reverse_one_to_many_rels', to='example.forwardmanytomanyforrelated')),
                ('forward_many_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.forwardmanytooneforrelated')),
                ('forward_one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rel', to='example.forwardonetooneforrelated')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('example_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.example')),
                ('forward_many_to_many_fields', models.ManyToManyField(related_name='reverse_one_to_one_rels', to='example.forwardmanytomanyforrelated')),
                ('forward_many_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rels', to='example.forwardmanytooneforrelated')),
                ('forward_one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.forwardonetooneforrelated')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('category', models.CharField(db_index=True, default='custom', max_length=200)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoAsset',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_base', models.IntegerField(default=600)),
                ('duration', models.IntegerField(default=None)),
                ('library', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='example.library')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedItemDefaultUUID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='object ID')),
                ('confidence', models.FloatField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_tagged_items_default_uuid', to='example.tag')),
            ],
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('confidence', models.FloatField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_tagged_items', to='example.tag')),
            ],
        ),
        migrations.CreateModel(
            name='SegmentProperTags',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('in_time', models.IntegerField()),
                ('out_time', models.IntegerField()),
                ('in_time_base', models.IntegerField(default=100)),
                ('out_time_base', models.IntegerField(default=100)),
                ('category', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField(null=True)),
                ('transcript', models.TextField(null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='example.TaggedItemDefaultUUID', to='example.Tag', verbose_name='Tags')),
                ('video_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='example.videoasset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateField(editable=False)),
                ('purchase_price', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('apartment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='example.apartment')),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToReverseOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.reverseonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToReverseOneToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.reverseonetomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToReverseManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_many_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.reversemanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToForwardOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.forwardonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToForwardManyToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.forwardmanytoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToOneToForwardManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_many_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_one_rel', to='example.forwardmanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToReverseOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_one_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.reverseonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToReverseOneToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.reverseonetomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToReverseManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_many_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.reversemanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToForwardOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_one_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.forwardonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToForwardManyToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_one_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.forwardmanytoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseOneToManyToForwardManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_many_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_one_to_many_rels', to='example.forwardmanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToReverseOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_one_to_one_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.reverseonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToReverseOneToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_one_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.reverseonetomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToReverseManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reverse_many_to_many_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.reversemanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToForwardOneToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_one_to_one_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.forwardonetoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToForwardManyToOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_one_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.forwardmanytoone')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReverseManyToManyToForwardManyToMany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forward_many_to_many_fields', models.ManyToManyField(related_name='reverse_many_to_many_rels', to='example.forwardmanytomany')),
            ],
            options={
                'ordering': ['pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('surface_area', models.DecimalField(decimal_places=2, max_digits=9, null=True)),
                ('housing_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='real_estates', to='example.housingcompany')),
            ],
            options={
                'verbose_name': 'Real estate',
                'verbose_name_plural': 'Real estates',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='PropertyManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Property manager',
                'verbose_name_plural': 'Property managers',
                'ordering': ['pk'],
                'indexes': [models.Index(fields=['name'], name='example_pro_name_33b8c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'verbose_name': 'Postal code',
                'verbose_name_plural': 'Postal codes',
                'indexes': [models.Index(fields=['code'], name='example_pos_code_11411c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(decimal_places=0, editable=False, max_digits=3)),
                ('owner', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='ownerships', to='example.owner')),
                ('sale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='ownerships', to='example.sale')),
            ],
            options={
                'verbose_name': 'Ownership',
                'verbose_name_plural': 'Ownership',
                'ordering': ['pk'],
            },
        ),
        migrations.AddIndex(
            model_name='owner',
            index=models.Index(fields=['name'], name='example_own_name_ae4a28_idx'),
        ),
        migrations.AddField(
            model_name='housingcompany',
            name='developers',
            field=models.ManyToManyField(to='example.developer'),
        ),
        migrations.AddField(
            model_name='housingcompany',
            name='postal_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='housing_companies', to='example.postalcode'),
        ),
        migrations.AddField(
            model_name='housingcompany',
            name='property_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='housing_companies', to='example.propertymanager'),
        ),
        migrations.AddField(
            model_name='forwardonetoone',
            name='forward_many_to_many_fields',
            field=models.ManyToManyField(related_name='forward_one_to_one_rels', to='example.forwardmanytomanyforrelated'),
        ),
        migrations.AddField(
            model_name='forwardonetoone',
            name='forward_many_to_one_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forward_one_to_one_rels', to='example.forwardmanytooneforrelated'),
        ),
        migrations.AddField(
            model_name='forwardonetoone',
            name='forward_one_to_one_field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forward_one_to_one_rel', to='example.forwardonetooneforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytoone',
            name='forward_many_to_many_fields',
            field=models.ManyToManyField(related_name='forward_many_to_one_rels', to='example.forwardmanytomanyforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytoone',
            name='forward_many_to_one_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forward_many_to_one_rels', to='example.forwardmanytooneforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytoone',
            name='forward_one_to_one_field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forward_many_to_one_rel', to='example.forwardonetooneforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytomany',
            name='forward_many_to_many_fields',
            field=models.ManyToManyField(related_name='forward_many_to_many_rels', to='example.forwardmanytomanyforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytomany',
            name='forward_many_to_one_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forward_many_to_many_rels', to='example.forwardmanytooneforrelated'),
        ),
        migrations.AddField(
            model_name='forwardmanytomany',
            name='forward_one_to_one_field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forward_many_to_many_rel', to='example.forwardonetooneforrelated'),
        ),
        migrations.AddField(
            model_name='example',
            name='forward_many_to_many_fields',
            field=models.ManyToManyField(related_name='example_rels', to='example.forwardmanytomany'),
        ),
        migrations.AddField(
            model_name='example',
            name='forward_many_to_one_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='example_rels', to='example.forwardmanytoone'),
        ),
        migrations.AddField(
            model_name='example',
            name='forward_one_to_one_field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='example_rel', to='example.forwardonetoone'),
        ),
        migrations.AddField(
            model_name='example',
            name='named_relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='example.housingcompany'),
        ),
        migrations.AddField(
            model_name='example',
            name='symmetrical_field',
            field=models.ManyToManyField(to='example.example'),
        ),
        migrations.AddIndex(
            model_name='developer',
            index=models.Index(fields=['name'], name='example_dev_name_70c267_idx'),
        ),
        migrations.AddField(
            model_name='customtag',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='building',
            name='real_estate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='example.realestate'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='apartments', to='example.building'),
        ),
        migrations.CreateModel(
            name='ApartmentProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.apartment',),
        ),
        migrations.CreateModel(
            name='BuildingProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.building',),
        ),
        migrations.CreateModel(
            name='DeveloperProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.developer',),
        ),
        migrations.CreateModel(
            name='HousingCompanyProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.housingcompany',),
        ),
        migrations.CreateModel(
            name='PropertyManagerProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.propertymanager',),
        ),
        migrations.CreateModel(
            name='RealEstateProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('example.realestate',),
        ),
        migrations.AddConstraint(
            model_name='taggeditemdefaultuuid',
            constraint=models.UniqueConstraint(fields=('content_type', 'object_id', 'tag'), name='taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq2'),
        ),
        migrations.AddConstraint(
            model_name='taggeditem',
            constraint=models.UniqueConstraint(fields=('content_type', 'object_id', 'tag'), name='taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq1'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['-purchase_date'], name='example_sal_purchas_3a6659_idx'),
        ),
        migrations.AddIndex(
            model_name='realestate',
            index=models.Index(fields=['name'], name='example_rea_name_165404_idx'),
        ),
        migrations.AddIndex(
            model_name='housingcompany',
            index=models.Index(fields=['name'], name='example_hou_name_33e5dd_idx'),
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['name'], name='example_bui_name_f06b41_idx'),
        ),
        migrations.AddIndex(
            model_name='apartment',
            index=models.Index(fields=['street_address', 'stair', '-apartment_number'], name='example_apa_street__b3d673_idx'),
        ),
    ]
