# Generated by Django 4.2.10 on 2024-02-27 17:11

from django.db import migrations, models
from ..models import HousingCompany, PropertyManager
from ..tag_model_taggit import Tag

import django.db.models.deletion
import taggit.managers
import random


def make_data(apps, schema_editor):
    architecture_types = ["modern", "gothic", "classic", "neoclassical", "islamic"]
    for hc in HousingCompany.objects.all():
        tag_name = random.choice(architecture_types)
        confidence = random.random() * 100
        hc.tags.add(tag_name, through_defaults={"confidence": confidence})

    property_manager_types = ["hard-hitting", "noob", "amateur", "pro", "high-potential"]
    for pm in PropertyManager.objects.all():
        tag_name = random.choice(property_manager_types)
        confidence = random.random() * 100
        pm.tags.add(tag_name, through_defaults={"confidence": confidence})


def delete_data(apps, schema_editor):
    Tag.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('example', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('category', models.CharField(db_index=True, default='custom', max_length=200)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('confidence', models.FloatField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_tagged_items', to='example.tag')),
            ],
            options={
                'unique_together': {('content_type', 'object_id', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='housingcompany',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='example.TaggedItem', to='example.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='propertymanager',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='example.TaggedItem', to='example.Tag', verbose_name='Tags'),
        ),
        migrations.RunPython(make_data, delete_data)
    ]
